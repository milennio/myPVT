11	МОДИФИКАТОРЫ ДОСТУПА
Модификаторы доступа можно рассматривать как с позиции инкапсуляции так и наследования. Если рассматривать с позиции инкапсуляции, то модификаторы доступа позволяют ограничить нежелательный доступ к членам класса извне.
Язык Java предоставляет несколько уровней защиты, обеспечивающих возможность настройки области видимости данных и методов. Из-за наличия пакетов Java работает с четырьмя категориями видимости между элементами классов: 
-- private – члены класса доступны только членам данного класса; 
-- protected – члены класса доступны классам, находящимся в том же пакете, и подклассам – в других пакетах; 
-- по умолчанию (friendly)– дружественные члены класса доступны классам, находящимся в том же пакете; не пишется явно, только подразумевается;
-- public – члены класса доступны для всех классов в этом и других пакетах. 

12	2-й принцип ООП
Наследование - возможность создания нового класса на основе существующего.
Один класс может наследовать или расширять поля и методы другого лксса с помощью ключевого слова extends. Класс, который выступает базой для расширения, называют суперклассом, а класс, который непосредственно проводит расширение, - подклассом.

13	ЧТО ДОСТУПНО ПОДКЛАССУ
Подкласс имеет доступ ко всем открытым и защищаемым полям и метода суперкласса так, словно они описаны в подклассе. Производный класс не имеет доступа к закрытым полям и методам класса. также подкласс может добавлять и переопределять методы.

14	ОПЕРАЦИЯ SUPER
Если метод базового класса переопределен (имеет ту же сигнатуру) в производном классе, то такой метод базового лкасса можно вызвать из производного с помощью конструкции.
Привызове super.method() обращение производится к ближайшему муперкласссу.

15	КАК ВЫЗВАТЬ ЧЕРЕЗ SUPER...
- конструктора: super(список_параметров);
- атрибут суперкласса: super.id;
- метод: super.getId;

16	ИСПОЛЬЗОВАНИЕ final
Нельзя создать подкласс для класса, объявленного со спецификатором final.

17	КЛАСС java.lang.Object
... родительский класс для всех классов. По дефолту.
clone() - создает и возвращает копию выщывающего объекта
equals() - предназначена для переопределения в подклассах с выполнением общих соглашений о сравнении содержимого двух объектов
getClass() - возвращает объект типа Class
finalize() - вызывает garbage collctor
hashCode() - возвращает хеш-код объекта
toString() - возвращает представление объекта в виде строки

18	АБСТРАКТНЫЕ КЛАССЫ
АК объявляются с ключевым словом abstract и сожержат объявления абстрактных методов, которые не реализованы в этих классах, а будут реализованы в подклассах. Объекты таких классов создать нельзя, но можно создать объекты подклассов, которые реализуют эти методы. При этом допустимо объявлять ссылку на абстрактный класс, но инициализировать ее можно только объектом производного от него класса. АК могут содержать и полностью реализовывать методы, а также конструкторы и поля данных.

19	Переопределение метода — одна из возможностей языка программирования, позволяющая подклассу или дочернему классу обеспечивать специфическую реализацию метода, уже реализованного в одном из суперклассов или родительских классов. Реализация метода в подклассе переопределяет (заменяет) его реализацию в суперклассе, описывая метод с тем же названием, что и у метода суперкласса, а также у нового метода подкласса должны быть те же параметры или сигнатура, тип возвращаемого результата, что и у метода родительского класса. Версия метода, которая будет исполняться, определяется объектом, используемым для его вызова. Если вызов метода происходит от объекта родительского класса, то выполняется версия метода родительского класса, если же объект подкласса вызывает метод, то выполняется версия дочернего класса. 

20	ПРИВЕДЕНИЕ ТИПОВ ПРИ НАСЛЕДОВАНИИ
Если переменной суперкласса присваивается объект подкласса, возможности класса сужаются, и компилятор без проблем позволяет сделать это.
Если наоборрот, объект суперкласса присваивается переменной подкласса, возможности класса расширяются, поэтому программист должен подтвердить это с помощью обозначения. предназначенного для приведения типов, указав в скобках имя подкласса.
