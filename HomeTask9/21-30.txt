21	3 ПРИЗНАК ООП
ПОЛИМОРФИЗМ - возможность использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта.
По существу это просто переопределение методов суперкласса в подклассах.

22	ИНТЕРФЕЙС
И. говорит о том, что класс может делать, но не говорят, как он это должен деать. Интерфейс только гарантирует, какие методы должен выполнять класс, но как класс выполняет контракт интерфей контролировать не может.

23	ОБЪЯВЛЕНИЕ ИНТЕРФЕЙСА
[cgtwbabrfnjhs] inteface имя_И 
	extends имя _базового_И{
		/*объявление И*/
		}
Поля И. по ум. являются final static. Все методы по ум. открыты.

24	СТАТИЧЕСКИЕ МЕТОДЫ И ПОЛЯ
Поля данных, объявленные в классе как static, являются общими для всех объектов класса и называются перемеными класса. Если один объектизменит значение такого поля. то это изменение увидят все объекты. Для работы со статическими атрибутами используются статические методы, объявленные со спецификатором static. Такие методы являются методами класса, не привязаны ни к какому объекту и не содержат указателя this на конкретный объект, вызвавший методы. Статические методы реализуют парадигму "раннего связывания". жестко определяющую версию метода на этапе компиляции. По причине недоступности указателя this статисческие поля и методы не могут обращаться к нестатическим методам напрямую, так как для обращения к статическим полям и методам достаточно имения класса, в котором они определены.

25	ПЕРЕОПРЕДЕЛЕНИЕ МЕТОДА equals()
При сравнении двух объекттов возвращает истину, если содержимое объектов эквивалетно, и ложе - в противном случае.

26	ПЕРЕОПРЕДЕЛЕНИЕ МЕТОДА hashCode()
Метод int hashCode() возвращает хэш-код объекта, вычисление которого управляется следующиеми соглашениями:
- во время работы приложения значение хэш-кода объекта не изменятеся, если объект не был изменен
- все одинаковые посодержанию объекты одного типа должны иметь одинаковые хэш-коды
- различные по содержанию объекты одного типа могут иметь различные хэш-коды.
Метод следует переопределять всегда, когда переопределен метод equals().

27	ПЕРЕОПРЕДЕЛЕНИЕ МЕТОДА toString()
Метод toString() следует переопределять т.о., чтобы кроме стандартной информации о пакете(опционально), в котором находится класс, и самого имени лкасса (опционально), он возвращал значения полей объекта, вызвавшего этот метод (то есть всю полезную информацию объекта), вместо хэш-кода, как это делается в классе Object.

28	ОБРАБОТКА СТРОК
Строка в языке Java - это основной носитель текстовой информации. Это не массив символов типа char, а объект соответствующего класса. Системная библиотека содержит классы String, StringBuilder и stringBuffer, поддерживающие работу со строками и определенные в пакете java.lang, подключаемом автоматически. Эти классы объявлены как final, что означает невозможность создания собственных порожденных классов со свойствам строки. Кроме того, для форматирования и обработки строк применяются классы Formatter, Pattern, Matcher и др.

29	Классы	StringBuilder и stringBuffer
Они являются "близнецами" и по своему предназначению близки к классу String, но, в отличие от последнего, содержимое и размеры объектов классов StringBuilder и stringBuffer можно изменять.
Основным и единственным отличием StringBuilder от stringBuffer является потокобезопасноть последнего.


30	ЧЕМ ОТЛИЧАЕТСЯ JRE, JVM И JDK
JRE кратко - для работы. 
JAVA RUNTIME ENVIRONMENT - минимальная реализация виртуальной машины, необходимая для исполнения джава-приложений, без компилятора и других средств разработки. Состоит из виртуальной машины и библиотеки джава-классов.
JDK (java development kit) кратко - для программирования. Бесплатно распространяемый компанией Oracle Corp. (ex-Sun Microsystems) комплект разработчика приложений на языке джава, включающий в себя компилятор java (javac), стандартные библиотеки классов Java, примеры, документацию, различные утилиты и исполнительную систему Java (JRE)).
Java Virtual Machine - основная часть исполняющей системы Java, так называемой Java Runtime Environment. Виртуальная машина Java интерпритирует байт-код джава, предварительно созданный из исходного текста джава-программы компилятором. JVM может также использоваться для выполнения программ, написанных на других языках программирования.


